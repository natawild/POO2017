#BlueJ class context
comment0.params=
comment0.target=CarroLig()
comment0.text=\n\ Construtor\ vazio.\ Como\ se\ trata\ de\ uma\ subclasse\ de\ Veiculo,\ utilizamos\ o\ construtor\ super\ \n\ para\ a\ reaproveita\u00E7\u00E3o\ de\ c\u00F3digo\ e\ para\ utilizarmos\ heran\u00E7a.\n
comment1.params=matricula\ marca\ fiabilidade\ coord
comment1.target=CarroLig(java.lang.String,\ java.lang.String,\ float,\ Coordenadas)
comment1.text=\n\ Construtor\ parametrizado,\ ou\ seja,\ recebe\ a\ matricula,\ as\ coordenadas,\ a\ velocidade\ m\u00E9dia,\ o\ preco\ base\ por\ km\n\ e\ o\ fator\ de\ fiabilidade\n\ @param\ matricula\n\ @param\ preco\n\ @param\ fiabilidade\ De\ 1-5,\ descreve\ a\ fiabilidade\ do\ Veiculo\n\ @param\ coord\n
comment10.params=
comment10.target=CarroLig\ clone()
comment2.params=c
comment2.target=CarroLig(CarroLig)
comment2.text=\n\ construtor\ de\ c\u00F3pia\ \n
comment3.params=
comment3.target=int\ getLugaresLivres()
comment4.params=
comment4.target=double\ getVm()
comment5.params=
comment5.target=double\ getPrecoPorKm()
comment6.params=
comment6.target=float\ calcFiabilidade()
comment6.text=\n\ Determina\ a\ capacidade\ de\ a\ viatura\ cumprir\ o\ tempo\ acordado\ com\ o\ cliente\ \n\ varia\ de\ 0.9\ a\ 1.5,\ pois\ se\ fizer\ 1\ cumpre\ o\ tempo\ mais\ do\ que\ isso\ n\u00E3o\ cumpre\ e\ menos\ \u00E9\ mais\ r\u00E1pido\ \n\ \n\ @return\ finalX\ valor\ da\ fiabilidade\ do\ veiculo\ \n
comment7.params=o
comment7.target=boolean\ equals(java.lang.Object)
comment7.text=\n\ equals\ recebe\ um\ Object\ o\ e\ verifica\ se\ \u00E9\ igual\ a\ um\ CarroLig\n
comment8.params=
comment8.target=java.lang.String\ toString()
comment8.text=\n\ m\u00E9todo\ toString\n\ \n
comment9.params=
comment9.target=java.lang.String\ apresentaDadosCliente()
numComments=11
