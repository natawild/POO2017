#BlueJ class context
comment0.params=
comment0.target=BD()
comment0.text=\n\ Construtor\ vazio\n
comment1.params=c\ m\ v\ h
comment1.target=BD(java.util.List,\ java.util.List,\ java.util.List,\ java.util.Set)
comment1.text=\n\ Construtor\ parametrizado\n\ @param\ c\ List<AtorInterface>\n\ @param\ m\ List<AtorInterface>\n\ @param\ v\ List<VeiculoInterface>\n\ @param\ h\ Set<Historico>\n
comment10.params=h
comment10.target=void\ setHistorico(java.util.Set)
comment10.text=\n\ setHistorico(Set<Historico>\ v\ -\ Modifica\ a\ lista\ de\ historico\n\ @param\ v\ \:\ Set<Historico>\ v\n\ \n
comment11.params=
comment11.target=BDInterface\ clone()
comment12.params=obj
comment12.target=boolean\ equals(java.lang.Object)
comment12.text=\n\ A\ fun\u00E7\u00E3o\ equals\ recebe\ um\ Objeto\ gen\u00E9rico\ e\ verifica\ se\ \u00E9\ exatamente\ igual\ a\ uma\ BD.\n\ @param\ obj\ Objecto\ a\ comparar.\n
comment13.params=clientes
comment13.target=boolean\ equalsClientes(java.util.List)
comment13.text=\n\ M\u00E9todo\ que\ faz\ o\ equals\ dos\ Clientes\ \n
comment14.params=atores1\ atores2
comment14.target=boolean\ equalsListAtores(java.util.List,\ java.util.List)
comment14.text=\n\ M\u00E9todo\ que\ faz\ o\ equals\ de\ uma\ lista\ de\ Atores,\ diferenciando\ se\ s\u00E3o\ Cliente\ ou\ Motorista\n
comment15.params=veiculos1\ veiculos2
comment15.target=boolean\ equalsVeiculos(java.util.List,\ java.util.List)
comment15.text=\n\ M\u00E9todo\ auxiliar\ para\ fazer\ o\ equals\ da\ lista\ de\ Veiculos\n
comment16.params=
comment16.target=java.lang.String\ toString()
comment16.text=\n\ toString\n
comment17.params=
comment17.target=java.util.List\ getListaDeMotoristas()
comment17.text=\n\ M\u00E9todo\ getListaDeMotoristas\ -\ devolve\ uma\ lista\ com\ todos\ os\ motoristas\n
comment18.params=
comment18.target=java.util.List\ getListaClientes()
comment18.text=\n\ M\u00E9todo\ que\ devolve\ a\ lista\ de\ todos\ os\ Clientes\ \n
comment19.params=cliente
comment19.target=void\ addCliente(Cliente)
comment19.text=\n\ M\u00E9todo\ addCliente\ -\ Adiciona\ um\ cliente\ \n\ @param\ cliente\n
comment2.params=bd
comment2.target=BD(BD)
comment2.text=\n\ Construtor\ por\ c\u00F3pia\ \n
comment20.params=motorista
comment20.target=void\ addMotorista(Motorista)
comment20.text=\n\ M\u00E9todo\ addMotorista\ -\ Adiciona\ um\ motorista\n\ @param\ motorista\n
comment21.params=veiculo
comment21.target=void\ addVeiculo(VeiculoInterface)
comment21.text=\n\ M\u00E9todo\ addVeiculo\ -\ Adiciona\ um\ veiculo\ \n\ @param\ veiculo\n
comment22.params=historico
comment22.target=void\ addHistorico(Historico)
comment22.text=\n\ M\u00E9todo\ addHistorico\ -\ Adiciona\ um\ historico\ \n\ @param\ historico\n
comment23.params=cliente
comment23.target=void\ removeCliente(Cliente)
comment23.text=\n\ removeCliente(Cliente\ cliente)\ -\ M\u00E9todo\ para\ remover\ um\ cliente\ da\ lista\n\ @param\ cliente\n
comment24.params=veiculo
comment24.target=void\ removeVeiculo(Veiculo)
comment24.text=\n\ removeVeiculo(Veiculo\ veiculo)\ -\ M\u00E9todo\ para\ remover\ um\ veiculo\ da\ lista\n\ @param\ veiculo\n
comment25.params=motorista
comment25.target=void\ removeMotorista(Motorista)
comment25.text=\n\ removeMotorista(Motorista\ motorista)\ -\ M\u00E9todo\ para\ remover\ um\ motorista\ da\ lista\n\ @param\ motorista\n
comment26.params=nome
comment26.target=AtorInterface\ findClientePeloNome(java.lang.String)
comment26.text=\n\ Devolve\ a\ lista\ de\ Clientes\ com\ determinado\ nome,\ quer\ esteja\ com\ mai\u00FAsculas\ ou\ min\u00FAsculas\ \n\ @param\ nome\n
comment27.params=
comment27.target=java.util.List\ matriculasReg()
comment27.text=\n\ devolve\ a\ lista\ de\ todas\ as\ matriculas\ registadas\ \n
comment28.params=email\ password
comment28.target=boolean\ loginValido(java.lang.String,\ java.lang.String)
comment29.params=email
comment29.target=AtorInterface\ getClienteComEmail(java.lang.String)
comment3.params=
comment3.target=java.util.List\ getClientes()
comment3.text=\n\ getClientes()\ -\ Devolve\ uma\ lista\ contendo\ todos\ os\ clientes\ \n\ \n
comment30.params=email
comment30.target=AtorInterface\ getMotoristaComEmail(java.lang.String)
comment31.params=cliente
comment31.target=Motorista\ getMotoristaMaisPerto(AtorInterface)
comment32.params=pass
comment32.target=java.lang.String\ codificar(java.lang.String)
comment32.text=\ Encontrei\ este\ \n\ \n\ \n\ try\ \ \ \ {\n\ \ \ \ \ \ \ \ \ \ \ \ \ MessageDigest\ digest\ \=\ MessageDigest.getInstance("MD5");\n\ \ \ \ \ \ \ \ \ \ \ \ \ digest.update(pass.getBytes());\n\ \ \ \ \ \ \ \ \ \ \ \ \ BASE64Encoder\ encoder\ \=\ new\ BASE64Encoder\ ();\ \n\ \ \ \ \ \ \ \ \ \ \ \ \ return\ encoder.encode(digest.digest());\ \n\ \ \ \ \ \ \ \ \ }catch\ (NoSuchAlgorithmException\ ns)\ {\n\ \ \ \ \ \ \ \ \ \ \ \ \ ns.printStackTrace\ ();\n\ \ \ \ \ \ \ \ \ \ \ \ \ return\ senha;\n\ \ \ \ \ \ \ \ \ \ \ \ \n\ \ \ \ \ \ \ \ \ \ \ \ }\n\ \n\ \ \ \ \ \n\ \ \ \ public\ static\ String\ encripta\ (String\ senha)\ {\n\n
comment4.params=
comment4.target=java.util.List\ getMotoristas()
comment4.text=\n\ getMotoristas()\ -\ Devolve\ uma\ lista\ contendo\ todos\ os\ motoristas\ \n
comment5.params=
comment5.target=java.util.List\ getVeiculos()
comment5.text=\n\ getVeiculos()-\ devolve\ uma\ lista\ contendo\ todos\ os\ Veiculos\ \n\ (Iterador\ Interno)\ \n
comment6.params=
comment6.target=java.util.Set\ getHistorico()
comment7.params=c
comment7.target=void\ setClientes(java.util.List)
comment7.text=\n\ setClientes(List<AtorInterface>\ c)\ -\ Modifica\ a\ lista\ de\ clientes\n\ @param\ c\ \:\ List<AtorInterface>\n
comment8.params=m
comment8.target=void\ setMotoristas(java.util.List)
comment8.text=\n\ setMotoristas(List<AtorInterface>\ m)\ -\ Modifica\ a\ lista\ de\ Motoristas\n\ @param\ m\ \:\ List<AtorInterface>\n
comment9.params=v
comment9.target=void\ setVeiculos(java.util.List)
comment9.text=\n\ setVeiculos(List<VeiculoInterface>\ v\ -\ Modifica\ a\ lista\ de\ Veiculos\n\ @param\ v\ \:\ List<VeiculoInterface>\ v\n\ \n
numComments=33
