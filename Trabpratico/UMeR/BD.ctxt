#BlueJ class context
comment0.params=
comment0.target=BD()
comment0.text=\n\ Construtor\ vazio\n
comment1.params=c\ m\ v
comment1.target=BD(java.util.List,\ java.util.List,\ java.util.List)
comment1.text=\n\ Construtor\ parametrizado\n
comment10.params=clientes
comment10.target=boolean\ equalsClientes(java.util.List)
comment10.text=\n\ M\u00E9todo\ que\ faz\ o\ equals\ dos\ Clientes\ \n
comment11.params=atores1\ atores2
comment11.target=boolean\ equalsListAtores(java.util.List,\ java.util.List)
comment11.text=\n\ M\u00E9todo\ que\ faz\ o\ equals\ de\ uma\ lista\ de\ Atores,\ diferenciando\ se\ s\u00E3o\ Cliente\ ou\ Motorista\n
comment12.params=veiculos1\ veiculos2
comment12.target=boolean\ equalsVeiculos(java.util.List,\ java.util.List)
comment12.text=\n\ M\u00E9todo\ auxiliar\ para\ fazer\ o\ equals\ da\ lista\ de\ Veiculos\n
comment13.params=
comment13.target=java.lang.String\ toString()
comment13.text=\n\ toString\n
comment14.params=cliente
comment14.target=void\ addCliente(Cliente)
comment14.text=\n\ M\u00E9todo\ addCliente\ -\ Adiciona\ um\ cliente\ \n\ @param\ cliente\n
comment15.params=motorista
comment15.target=void\ addMotorista(Motorista)
comment15.text=\n\ M\u00E9todo\ addMotorista\ -\ Adiciona\ um\ motorista\n\ @param\ motorista\n
comment16.params=veiculo
comment16.target=void\ addVeiculo(VeiculoInterface)
comment16.text=\n\ M\u00E9todo\ addVeiculo\ -\ Adiciona\ um\ veiculo\ \n\ @param\ veiculo\n
comment17.params=cliente
comment17.target=void\ removeCliente(Cliente)
comment17.text=\n\ removeCliente(Cliente\ cliente)\ -\ M\u00E9todo\ para\ remover\ um\ cliente\ da\ lista\n\ @param\ cliente\n
comment18.params=veiculo
comment18.target=void\ removeVeiculo(Veiculo)
comment18.text=\n\ removeVeiculo(Veiculo\ veiculo)\ -\ M\u00E9todo\ para\ remover\ um\ veiculo\ da\ lista\n\ @param\ veiculo\n
comment19.params=motorista
comment19.target=void\ removeMotorista(Motorista)
comment19.text=\n\ removeMotorista(Motorista\ motorista)\ -\ M\u00E9todo\ para\ remover\ um\ motorista\ da\ lista\n\ @param\ motorista\n
comment2.params=bd
comment2.target=BD(BD)
comment2.text=\n\ Construtor\ por\ c\u00F3pia\ \n
comment20.params=nome
comment20.target=AtorInterface\ findClientePeloNome(java.lang.String)
comment20.text=\n\ Devolve\ a\ lista\ de\ Clientes\ com\ determinado\ nome,\ quer\ esteja\ com\ mai\u00FAsculas\ ou\ min\u00FAsculas\ \n\ @param\ nome\n
comment21.params=
comment21.target=java.util.List\ matriculasReg()
comment21.text=\n\ devolve\ a\ lista\ de\ todas\ as\ matriculas\ registadas\ \n
comment3.params=
comment3.target=java.util.List\ getClientes()
comment3.text=\n\ getClientes()\ -\ Devolve\ uma\ lista\ contendo\ todos\ os\ clientes\ \n\ \n
comment4.params=
comment4.target=java.util.List\ getMotoristas()
comment4.text=\n\ getMotoristas()\ -\ Devolve\ uma\ lista\ contendo\ todos\ os\ motoristas\ \n
comment5.params=
comment5.target=java.util.List\ getVeiculos()
comment5.text=\n\ getVeiculos()-\ devolve\ uma\ lista\ contendo\ todos\ os\ Veiculos\ \n\ (Iterador\ Interno)\ \n
comment6.params=c
comment6.target=void\ setClientes(java.util.List)
comment6.text=\n\ setClientes(List<AtorInterface>\ c)\ -\ Modifica\ a\ lista\ de\ clientes\n\ @param\ c\ \:\ List<AtorInterface>\n
comment7.params=m
comment7.target=void\ setMotoristas(java.util.List)
comment7.text=\n\ setMotoristas(List<AtorInterface>\ m)\ -\ Modifica\ a\ lista\ de\ Motoristas\n\ @param\ m\ \:\ List<AtorInterface>\n
comment8.params=v
comment8.target=void\ setVeiculos(java.util.List)
comment8.text=\n\ setVeiculos(List<VeiculoInterface>\ v\ -\ Modifica\ a\ lista\ de\ Veiculos\n\ @param\ v\ \:\ List<VeiculoInterface>\ v\n\ \n
comment9.params=obj
comment9.target=boolean\ equals(java.lang.Object)
comment9.text=\n\ A\ fun\u00E7\u00E3o\ equals\ recebe\ um\ Objeto\ gen\u00E9rico\ e\ verifica\ se\ \u00E9\ exatamente\ igual\ a\ uma\ BD.\n\ @param\ obj\ Objecto\ a\ comparar.\n
numComments=22
