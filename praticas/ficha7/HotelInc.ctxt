#BlueJ class context
comment0.params=
comment0.target=HotelInc()
comment0.text=\n\ construtor\ vazio\n
comment1.params=nome
comment1.target=HotelInc(java.lang.String)
comment10.params=
comment10.target=java.util.List\ getHoteis()
comment10.text=\n\ \u00A9\n\ (deve\ devolver\ uma\ lista\ dos\ hoteis)\n
comment11.params=
comment11.target=java.util.List\ getHoteisAlt()
comment12.params=hs
comment12.target=void\ adiciona(java.util.Set)
comment12.text=\n\ Adicionar\ a\ informa\u00E7\u00E3o\ de\ um\ conjunto\ de\ hot\u00E9is.\n
comment13.params=
comment13.target=java.util.Map\ getHoteisMap()
comment2.params=hi
comment2.target=HotelInc(HotelInc)
comment3.params=nome\ hoteis
comment3.target=HotelInc(java.lang.String,\ java.util.Map)
comment4.params=
comment4.target=java.lang.String\ getNome()
comment5.params=cod
comment5.target=boolean\ existeHotel(java.lang.String)
comment5.text=\n\ Verificar\ a\ exist\u00EAncia\ de\ um\ hotel,\ dado\ o\ seu\ c\u00F3digo.\n
comment6.params=
comment6.target=int\ quantos()
comment6.text=\n\ Devolver\ a\ quantidade\ de\ hot\u00E9is\ existentes\ na\ cadeia.\n
comment7.params=loc
comment7.target=long\ quantos(java.lang.String)
comment7.text=\n\ Devolver\ o\ n\u00FAmero\ total\ de\ hot\u00E9is\ de\ uma\ dada\ localidade.\n
comment8.params=cod
comment8.target=Hotel\ getHotel(java.lang.String)
comment8.text=\n\ Devolver\ a\ chave\ de\ um\ hotel,\ dado\ o\ seu\ c\u00F3digo\ (C\u00D3DIGOS\ EXISTENTES)\n
comment9.params=h
comment9.target=void\ adiciona(Hotel)
comment9.text=\n\ Adicionar\ a\ informa\u00E7\u00E3o\ de\ um\ novo\ hotel.\n\ @\ param\ cod\ tem\ de\ ser\ um\ c\u00F3digo\ que\ exista\ \n
numComments=14
